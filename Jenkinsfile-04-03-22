pipeline {
options{
buildDiscarder(logRotator(numToKeepStr: '7'))
}    
agent any
environment{
DOCKER_TAG = getDockerTag()    
NEXUS_URL  = "sampathgorre"
IMAGE_URL_WITH_TAG = "${NEXUS_URL}/node-app:${DOCKER_TAG}"
}
stages {
stage('git checkout'){
steps {
git branch: 'pipeline-test', credentialsId: 'github_credentials', url: 'https://github.com/sailusampathraj/node-app.git'
}
}
stage('Build Docker Image'){
steps{
sh "docker build . -t ${IMAGE_URL_WITH_TAG}"
}
}
stage('Push Image to docker hub'){
steps{
withDockerRegistry(credentialsId: 'dockerhub-cred', url: 'https://index.docker.io/v1/') {
    sh 'docker push ${IMAGE_URL_WITH_TAG}'
}
}
}
}
}
post
{
always
{
// make sure that the Docker image is removed
sh 'docker rmi ${IMAGE_URL_WITH_TAG} | true'
}
    
}
def getDockerTag(){
    def tag  = sh script: 'git rev-parse --short HEAD', returnStdout: true
    return tag
}
